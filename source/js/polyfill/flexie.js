


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>flexie/dist/flexie.min.js at master Â· doctyper/flexie</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe117-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (e1c0c3f392) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="5D9DAF5B:043B:71B4C59:52B01E18" name="octolytics-dimension-request_id" /><meta content="1426876" name="octolytics-actor-id" /><meta content="suenot" name="octolytics-actor-login" /><meta content="20719f3d58a1e1f3e2c9088e3b0683f2b11ca0586bb221ca388ab314ff421689" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="fJTAGPWokTlZmjvg4IOOwEBa0os8QaTRKiQ4DCliUz4=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-03f90ea33af27d8efd026ad0c6fa2e77ac339e39.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-113520fd4ebb74e106043ae23735a6b44043d348.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-1844a1411761b49806b833b36f4f340a4b4b17bd.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-142714ce3293528ebf737967d22fe9ece8e545eb.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="4adad49a5c3a10ba97e81e8674c5ce38">

        <link data-pjax-transient rel='permalink' href='/doctyper/flexie/blob/ba0dd6a2f7a2ed4127090062cabb70dc2cd8b6b7/dist/flexie.min.js'>
  <meta property="og:title" content="flexie"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/doctyper/flexie"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="flexie - Legacy support for the CSS3 Flexible Box Model"/>

  <meta name="description" content="flexie - Legacy support for the CSS3 Flexible Box Model" />

  <meta content="6960" name="octolytics-dimension-user_id" /><meta content="doctyper" name="octolytics-dimension-user_login" /><meta content="998363" name="octolytics-dimension-repository_id" /><meta content="doctyper/flexie" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="998363" name="octolytics-dimension-repository_network_root_id" /><meta content="doctyper/flexie" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/doctyper/flexie/commits/master.atom" rel="alternate" title="Recent Commits to flexie:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production linux vis-public page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have unread notifications">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="suenot"
      data-repo="doctyper/flexie"
      data-branch="master"
      data-sha="f7abb47062b9b8af0e505a1eb858d58b4a1dfd98"
  >

    <input type="hidden" name="nwo" value="doctyper/flexie" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/suenot" class="name">
        <img height="20" src="https://1.gravatar.com/avatar/5a66bcdddc45f70f48e2d97e0ca3ffb7?d=https%3A%2F%2Fidenticons.github.com%2F8868235d578ffd7c7c7461e0ec3a82a4.png&amp;r=x&amp;s=140" width="20" /> suenot
      </a>
    </li>

      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo" aria-label="Create a new repo">
          <span class="octicon octicon-repo-create"></span>
        </a>
      </li>

      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          aria-label="Account settings "
          title="Account settings ">
          <span class="octicon octicon-tools"></span>
        </a>
      </li>
      <li>
        <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </a>
      </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>



    <li class="section-title">
      <span title="doctyper/flexie">This repository</span>
    </li>
      <li>
        <a href="/doctyper/flexie/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="fJTAGPWokTlZmjvg4IOOwEBa0os8QaTRKiQ4DCliUz4=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="998363" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/doctyper/flexie/watchers">
        41
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container on">
    <a href="/doctyper/flexie/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/doctyper/flexie/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/doctyper/flexie/stargazers">
        693
      </a>
  </div>

  </li>


        <li>
          <a href="/doctyper/flexie/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/doctyper/flexie/network" class="social-count">73</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/doctyper" class="url fn" itemprop="url" rel="author"><span itemprop="title">doctyper</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/doctyper/flexie" class="js-current-repository js-repo-home-link">flexie</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container  ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/doctyper/flexie" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /doctyper/flexie">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/doctyper/flexie/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /doctyper/flexie/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>32</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests">
        <a href="/doctyper/flexie/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /doctyper/flexie/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>4</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/doctyper/flexie/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /doctyper/flexie/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/doctyper/flexie/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /doctyper/flexie/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/doctyper/flexie/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /doctyper/flexie/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/doctyper/flexie/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /doctyper/flexie/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url "
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/doctyper/flexie.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/doctyper/flexie.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url open"
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:doctyper/flexie.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:doctyper/flexie.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/doctyper/flexie" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/doctyper/flexie" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



              <a href="/doctyper/flexie/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:544e1bdfeb52e107a7fbaacc267641e0 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/doctyper/flexie/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/blob/gh-pages/dist/flexie.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/blob/master/dist/flexie.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/1.0.3/dist/flexie.min.js"
                 data-name="1.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.0.3">1.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/1.0.2/dist/flexie.min.js"
                 data-name="1.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.0.2">1.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/1.0.0/dist/flexie.min.js"
                 data-name="1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.0.0">1.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/0.9.0/dist/flexie.min.js"
                 data-name="0.9.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.9.0">0.9.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/0.8.0/dist/flexie.min.js"
                 data-name="0.8.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.0">0.8.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/doctyper/flexie/tree/0.7.0/dist/flexie.min.js"
                 data-name="0.7.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.0">0.7.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/doctyper/flexie" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">flexie</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/doctyper/flexie/tree/master/dist" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">flexie.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="dist/flexie.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/doctyper/flexie/contributors/master/dist/flexie.min.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>37 lines (36 sloc)</span>
        <span>18.164 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
                <a class="minibutton tooltipped upwards"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/doctyper/flexie/edit/master/dist/flexie.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/doctyper/flexie/raw/master/dist/flexie.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/doctyper/flexie/blame/master/dist/flexie.min.js" class="button minibutton ">Blame</a>
          <a href="/doctyper/flexie/commits/master/dist/flexie.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/doctyper/flexie/delete/master/dist/flexie.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>

            </td>
            <td class="blob-line-code">
                    <div class="code-body highlight"><pre><div class='line' id='LC1'><span class="kd">var</span> <span class="nx">Flexie</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">R</span><span class="p">){</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Ha</span><span class="p">,</span><span class="nx">E</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Ia</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">H</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">H</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">();</span><span class="nx">d</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">ka</span><span class="o">+</span><span class="s2">&quot;=&#39;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">+</span><span class="s2">&quot;&#39;]&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ca</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">){</span><span class="nx">da</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">=</span><span class="nx">da</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">ka</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Ja</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/\s?,\s?/</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">I</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">selector</span><span class="o">:</span><span class="nx">O</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span></div><div class='line' id='LC2'><span class="nx">properties</span><span class="o">:</span><span class="p">[]};</span><span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">;</span><span class="nx">z</span><span class="o">++</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">z</span><span class="p">];</span><span class="nx">s</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">property</span><span class="o">:</span><span class="nx">O</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">property</span><span class="p">),</span><span class="nx">value</span><span class="o">:</span><span class="nx">O</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">value</span><span class="p">)})}</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">)</span><span class="nx">s</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">return</span> <span class="nx">s</span><span class="p">};</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="o">?</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">C</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">I</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="nx">P</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">C</span><span class="p">];</span><span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">L</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">L</span><span class="o">++</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">L</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">.</span><span class="nx">property</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">property</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">z</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">P</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">)</span><span class="nx">z</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="k">else</span> <span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">x</span><span class="p">)};</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">selector</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span></div><div class='line' id='LC3'><span class="s2">&quot;,&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">properties</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">;</span><span class="nx">y</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">y</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">property</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;box-&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;display&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;box&quot;</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;orient&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;align&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;direction&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;pack&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;flex&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;flex-group&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;ordinal-group&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}}}}</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="nx">n</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">la</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="k">return</span><span class="p">{</span><span class="nx">boxes</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">children</span><span class="o">:</span><span class="nx">la</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span></div><div class='line' id='LC4'><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">selector</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">selector</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="nx">na</span><span class="p">)</span><span class="k">switch</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span> <span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;link&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">===</span><span class="nx">a</span><span class="p">){</span><span class="nx">ca</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span> <span class="k">in</span> <span class="nx">k</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span><span class="nx">e</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">match</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">ca</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">match</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">selector</span><span class="o">:</span><span class="nx">ja</span><span class="p">(</span><span class="nx">k</span><span class="p">)})}}</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">());</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC5'><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]]);</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">-=</span><span class="nx">f</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">qa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Ka</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">pixelLeft</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">na</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="p">)[</span><span class="nx">d</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">La</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">qa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">||</span></div><div class='line' id='LC6'><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;medium&quot;</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">ra</span><span class="p">,</span><span class="nx">sa</span><span class="p">,</span><span class="nx">ta</span><span class="p">,</span><span class="nx">ua</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">ea</span><span class="p">,</span><span class="nx">va</span><span class="p">,</span><span class="nx">wa</span><span class="p">,</span><span class="nx">xa</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="nx">pa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Ma</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">}</span><span class="kd">function</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">ya</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">ya</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">b</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">E</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">E</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">+=</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC7'><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">E</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Pa</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;%&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">}).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s|\&gt;|\+|\~/g</span><span class="p">,</span><span class="s2">&quot;%&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/%/g</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">_id</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">_class</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">_tag</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="sr">/#/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="nx">c</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_id</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/\.|\[|\:/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="nx">c</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_class</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/[a-zA-Z]+/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="nx">c</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_tag</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;ordinal&quot;</span><span class="o">:</span><span class="s2">&quot;flex&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Specificity&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">flex</span><span class="o">||</span></div><div class='line' id='LC8'><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="s2">&quot;ordinal-group&quot;</span><span class="p">]){</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="nx">Oa</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">selector</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">match</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">match</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="nx">U</span><span class="p">}}</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="s2">&quot;ordinal-group&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;1&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">match</span><span class="o">===</span><span class="nx">i</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-ordinal-group&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">flex</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">match</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">1</span><span class="p">)){</span><span class="nx">f</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span></div><div class='line' id='LC9'><span class="mi">10</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">)}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-ordinal-group&quot;</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-ordinal-group&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">match</span><span class="o">:</span><span class="nx">i</span><span class="p">})}}</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="o">-</span><span class="nx">l</span><span class="p">});</span><span class="k">return</span><span class="p">{</span><span class="nx">keys</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">groups</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="nx">f</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Ra</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">za</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">||</span></div><div class='line' id='LC10'><span class="nx">f</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="o">!==</span><span class="nx">b</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">updateInstance</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">}},</span><span class="mi">250</span><span class="p">)});</span><span class="nx">za</span><span class="o">=</span><span class="nx">u</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">f</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span> <span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;link&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isElementContentWhitespace</span><span class="o">||</span><span class="nx">Sa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">))){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span></div><div class='line' id='LC11'><span class="nx">e</span><span class="o">--</span><span class="p">}}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">;){</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">),</span><span class="nx">x</span><span class="p">);</span><span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">nested</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">flex</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">||++</span><span class="nx">da</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">selector</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">ja</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">properties</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">properties</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="o">=</span><span class="nx">ma</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nested</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">nested</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="s2">&quot; [&quot;</span><span class="o">+</span><span class="nx">$</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_instance</span><span class="o">=</span></div><div class='line' id='LC12'><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="p">{},</span><span class="nx">da</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">ka</span><span class="o">=</span><span class="s2">&quot;data-flexie-id&quot;</span><span class="p">,</span><span class="nx">$</span><span class="o">=</span><span class="s2">&quot;data-flexie-parent&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">Ca</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="p">{</span><span class="nx">NW</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*.Dom.select&quot;</span><span class="p">},</span><span class="nx">DOMAssistant</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*.$&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;*.DOMReady&quot;</span><span class="p">},</span><span class="nx">Prototype</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;$$&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;document.observe&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">:</span><span class="s2">&quot;dom:loaded&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;document&quot;</span><span class="p">},</span><span class="nx">YAHOO</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*.util.Selector.query&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;*.util.Event.onDOMReady&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;*.util.Event&quot;</span><span class="p">},</span><span class="nx">MooTools</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;$$&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;window.addEvent&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">:</span><span class="s2">&quot;domready&quot;</span><span class="p">},</span><span class="nx">Sizzle</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*&quot;</span><span class="p">},</span><span class="nx">jQuery</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;*(document).ready&quot;</span><span class="p">},</span><span class="nx">dojo</span><span class="o">:</span><span class="p">{</span><span class="nx">s</span><span class="o">:</span><span class="s2">&quot;*.query&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="s2">&quot;*.addOnLoad&quot;</span><span class="p">}},</span><span class="nx">T</span><span class="p">,</span><span class="nx">qa</span><span class="o">=</span><span class="sr">/^-?\d+(?:px)?$/i</span><span class="p">,</span><span class="nx">Ka</span><span class="o">=</span><span class="sr">/^-?\d/</span><span class="p">,</span><span class="nx">La</span><span class="o">=</span><span class="sr">/width|height|margin|padding|border/</span><span class="p">,</span><span class="nx">Ua</span><span class="o">=</span><span class="sr">/(msie) ([\w.]+)/</span><span class="p">,</span></div><div class='line' id='LC13'><span class="nx">Va</span><span class="o">=</span><span class="sr">/\t|\n|\r/g</span><span class="p">,</span><span class="nx">Wa</span><span class="o">=</span><span class="sr">/^max\-([a-z]+)/</span><span class="p">,</span><span class="nx">Xa</span><span class="o">=</span><span class="sr">/^https?:\/\//i</span><span class="p">,</span><span class="nx">Ha</span><span class="o">=</span><span class="sr">/^\s\s*/</span><span class="p">,</span><span class="nx">Ia</span><span class="o">=</span><span class="sr">/\s\s*$/</span><span class="p">,</span><span class="nx">Sa</span><span class="o">=</span><span class="sr">/^\s*$/</span><span class="p">,</span><span class="nx">Pa</span><span class="o">=</span><span class="sr">/\s?(\#|\.|\[|\:(\:)?[^first\-(line|letter)|before|after]+)/g</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">Da</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">aa</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span><span class="p">,</span><span class="nx">sa</span><span class="o">=</span><span class="s2">&quot;paddingRight&quot;</span><span class="p">,</span><span class="nx">va</span><span class="o">=</span><span class="s2">&quot;paddingBottom&quot;</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="s2">&quot;paddingLeft&quot;</span><span class="p">,</span><span class="nx">ea</span><span class="o">=</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">,</span><span class="nx">ua</span><span class="o">=</span><span class="s2">&quot;borderRightWidth&quot;</span><span class="p">,</span><span class="nx">xa</span><span class="o">=</span><span class="s2">&quot;borderBottomWidth&quot;</span><span class="p">,</span><span class="nx">ta</span><span class="o">=</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">,</span><span class="nx">wa</span><span class="o">=</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">,</span><span class="nx">ya</span><span class="o">=</span><span class="s2">&quot; -o- -moz- -ms- -webkit- -khtml- &quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">Da</span><span class="p">),</span><span class="nx">Ya</span><span class="o">=</span><span class="p">{</span><span class="nx">orient</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;stretch&quot;</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="s2">&quot;inherit&quot;</span><span class="p">,</span><span class="nx">pack</span><span class="o">:</span><span class="s2">&quot;start&quot;</span><span class="p">},</span><span class="nx">B</span><span class="o">=</span><span class="p">[],</span><span class="nx">la</span><span class="o">=</span><span class="p">[],</span><span class="nx">ga</span><span class="p">,</span><span class="nx">za</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">na</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="p">{</span><span class="nx">IE</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC14'><span class="nx">d</span><span class="o">=</span><span class="nx">Ua</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}()},</span><span class="nx">Ea</span><span class="p">;</span><span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">y</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">aa</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">aa</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">aa</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">Da</span><span class="p">)}</span><span class="k">return</span> <span class="nx">m</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)})}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">H</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nx">H</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">x</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">U</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">status</span><span class="o">===</span><span class="mi">200</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">responseText</span><span class="o">:</span></div><div class='line' id='LC15'><span class="nx">E</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="sr">/&lt;style[^&lt;&gt;]*&gt;([^&lt;&gt;]*)&lt;\/style[\s]?&gt;/img</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="p">[];</span><span class="nx">m</span><span class="p">;){(</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">)}</span><span class="nx">l</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\n\n&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">l</span><span class="p">}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Xa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span><span class="o">?</span><span class="nx">j</span><span class="o">:</span><span class="nx">x</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span><span class="o">+</span><span class="nx">j</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;?&quot;</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="o">+</span><span class="nx">j</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span></div><div class='line' id='LC16'><span class="nx">E</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">o</span><span class="o">||</span><span class="nx">v</span><span class="p">,</span><span class="nx">j</span><span class="p">));</span><span class="k">return</span> <span class="nx">s</span><span class="o">?</span><span class="s2">&quot;@media &quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot; {&quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="o">:</span><span class="nx">l</span><span class="p">}).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">o</span><span class="o">||</span><span class="nx">E</span><span class="p">;</span><span class="k">return</span> <span class="nx">m</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="s2">&quot; url(&quot;</span><span class="o">+</span><span class="nx">o</span><span class="o">+</span><span class="nx">b</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="kc">true</span><span class="p">)</span><span class="o">+</span><span class="nx">o</span><span class="o">+</span><span class="s2">&quot;) &quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">E</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="sr">/(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)\s*?/g</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/@import\s*(?:(?:(?:url\(\s*([&#39;&quot;]?)(.*)\1)\s*\))|(?:([&#39;&quot;])(.*)\3))\s*([^;]*);/g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="sr">/(behavior\s*?:\s*)?\burl\(\s*([&quot;&#39;]?)(?!data:)([^&quot;&#39;)]+)\2\s*\)/g</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="sr">/((?:^|(?:\s*\})+)(?:\s*@media[^\{]+\{)?)\s*([^\{]*?[\[:][^{]+)/g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="sr">/([(\[+~])\s+/g</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="sr">/\s+([)\]+~])/g</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="sr">/\s+/g</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="sr">/^\s*((?:[\S\s]*\S)?)\s*$/</span><span class="p">;</span></div><div class='line' id='LC17'><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;BASE&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">href</span><span class="o">:</span><span class="nx">R</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">m</span><span class="p">];</span><span class="nx">j</span><span class="o">!=</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">)}</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">m</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">y</span><span class="p">))</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="nx">v</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">z</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">w</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Va</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="nx">w</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s?(\{|\:|\})\s?/g</span><span class="p">,</span><span class="nx">aa</span><span class="p">);</span><span class="nx">v</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">I</span> <span class="k">in</span> <span class="nx">v</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">I</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">I</span><span class="p">]){</span><span class="nx">q</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span></div><div class='line' id='LC18'><span class="s2">&quot;}&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="nx">A</span><span class="o">=</span><span class="sr">/(\@media[^\{]+\{)?(.*)\{(.*)\}/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">q</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">3</span><span class="p">]){</span><span class="nx">q</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">A</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">P</span> <span class="k">in</span> <span class="nx">A</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">P</span><span class="p">)){</span><span class="nx">z</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="nx">P</span><span class="p">];</span><span class="nx">z</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">property</span><span class="o">:</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">value</span><span class="o">:</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]})}</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">selector</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">properties</span><span class="o">:</span><span class="nx">C</span><span class="p">})}}</span><span class="nx">w</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">w</span><span class="o">=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">w</span><span class="p">)}}</span><span class="nx">l</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="kd">var</span> <span class="nx">L</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">;</span><span class="nx">I</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">N</span><span class="p">;</span><span class="nx">P</span><span class="o">=</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">$</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">K</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">ha</span><span class="p">,</span><span class="nx">ba</span><span class="p">,</span><span class="nx">Fa</span><span class="p">,</span><span class="nx">Ga</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">boxes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">boxes</span><span class="p">[</span><span class="nx">q</span><span class="p">];</span><span class="nx">F</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">selector</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">selector</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">properties</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">y</span><span class="o">=</span><span class="nx">w</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">v</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">C</span><span class="p">];</span><span class="nx">L</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">property</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span></div><div class='line' id='LC19'><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;box-&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;display&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="s2">&quot;box&quot;</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;orient&quot;</span><span class="o">:</span><span class="nx">y</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;align&quot;</span><span class="o">:</span><span class="nx">w</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;direction&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;pack&quot;</span><span class="o">:</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">}}}</span><span class="nx">L</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="nx">F</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">selector</span><span class="p">);</span><span class="nx">F</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">F</span><span class="o">:</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">C</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">ca</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="nx">ma</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">children</span><span class="p">);</span><span class="nx">N</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">P</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="p">{</span><span class="nx">target</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">selector</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">properties</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">children</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">orient</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">pack</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">nested</span><span class="o">:</span><span class="nx">N</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">K</span><span class="p">)){</span><span class="nx">t</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">K</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;selector&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">&amp;&amp;!</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">]))</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="o">+=</span></div><div class='line' id='LC20'><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;children&quot;</span><span class="o">:</span><span class="nx">X</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">S</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">K</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">X</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">;</span><span class="nx">X</span><span class="o">++</span><span class="p">){</span><span class="nx">ha</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">K</span><span class="p">][</span><span class="nx">X</span><span class="p">];</span><span class="nx">t</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="nx">ba</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">Fa</span><span class="o">=</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">ba</span><span class="o">&lt;</span><span class="nx">Fa</span><span class="p">;</span><span class="nx">ba</span><span class="o">++</span><span class="p">){</span><span class="nx">Ga</span><span class="o">=</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">][</span><span class="nx">ba</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">ha</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">===</span><span class="nx">Ga</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">}</span><span class="nx">t</span><span class="o">||</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">ha</span><span class="p">)}</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="nx">N</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">N</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">X</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">;</span><span class="nx">S</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">S</span> <span class="k">in</span> <span class="nx">G</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">S</span><span class="p">))</span><span class="nx">G</span><span class="p">[</span><span class="nx">S</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">S</span><span class="p">]</span><span class="o">||</span><span class="nx">Ya</span><span class="p">[</span><span class="nx">S</span><span class="p">];</span><span class="nx">N</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">I</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">].</span><span class="nx">target</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="nx">u</span><span class="p">)}}}}</span><span class="nx">ga</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">B</span><span class="o">=</span><span class="p">{};</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">ga</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">ga</span><span class="p">[</span><span class="nx">q</span><span class="p">];</span><span class="nx">B</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">]}</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span> <span class="k">in</span> <span class="nx">B</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">K</span><span class="p">)){</span><span class="nx">F</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">K</span><span class="p">];</span><span class="nx">F</span><span class="p">.</span><span class="nx">display</span><span class="o">===</span><span class="s2">&quot;box&quot;</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nx">J</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">F</span><span class="p">)}}}}();</span></div><div class='line' id='LC21'><span class="nx">J</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderModel</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">J</span><span class="p">.</span><span class="nx">box</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">properties</span><span class="o">:</span><span class="p">{</span><span class="nx">boxModel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">===</span><span class="mi">8</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleared</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">selector</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s?,\s?/</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;padding-top:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">ea</span><span class="p">,</span><span class="nx">x</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;0.1px;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">===</span><span class="mi">6</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\&gt;|\+|\~/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;zoom:1;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">===</span><span class="mi">7</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;display:inline-block;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span></div><div class='line' id='LC22'><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;:before&quot;</span><span class="p">,</span><span class="s2">&quot;content: &#39;.&#39;;display: block;height: 0;overflow: hidden&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;:after&quot;</span><span class="p">,</span><span class="s2">&quot;content: &#39;.&#39;;display: block;height: 0;overflow: hidden;clear:both;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;:after{content: &#39;.&#39;;display: block;height: 0;overflow: hidden;clear:both;}&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleared</span><span class="o">=</span><span class="nx">u</span><span class="p">}},</span><span class="nx">boxDirection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">direction</span><span class="o">===</span><span class="s2">&quot;reverse&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">direction</span><span class="o">===</span><span class="s2">&quot;normal&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span></div><div class='line' id='LC23'><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nested</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">direction</span><span class="o">===</span><span class="s2">&quot;inherit&quot;</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">direction</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">direction</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="o">=!</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="p">}},</span><span class="nx">boxOrient</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">pos</span><span class="o">:</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">,</span><span class="nx">opp</span><span class="o">:</span><span class="s2">&quot;marginRight&quot;</span><span class="p">,</span><span class="nx">dim</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">out</span><span class="o">:</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">,</span><span class="nx">func</span><span class="o">:</span><span class="nx">Ma</span><span class="p">,</span><span class="nx">pad</span><span class="o">:</span><span class="p">[</span><span class="nx">ra</span><span class="p">,</span><span class="nx">sa</span><span class="p">,</span><span class="nx">ta</span><span class="p">,</span><span class="nx">ua</span><span class="p">]};</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">pos</span><span class="o">:</span><span class="s2">&quot;marginTop&quot;</span><span class="p">,</span><span class="nx">opp</span><span class="o">:</span><span class="s2">&quot;marginBottom&quot;</span><span class="p">,</span><span class="nx">dim</span><span class="o">:</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">out</span><span class="o">:</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">,</span><span class="nx">func</span><span class="o">:</span><span class="nx">Na</span><span class="p">,</span><span class="nx">pad</span><span class="o">:</span><span class="p">[</span><span class="nx">ea</span><span class="p">,</span><span class="nx">va</span><span class="p">,</span><span class="nx">wa</span><span class="p">,</span><span class="nx">xa</span><span class="p">]};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Q</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">&gt;=</span><span class="mi">9</span><span class="o">?</span><span class="s2">&quot;cssFloat&quot;</span><span class="o">:</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">orient</span><span class="o">===</span><span class="s2">&quot;vertical&quot;</span><span class="o">||</span></div><div class='line' id='LC24'><span class="nx">c</span><span class="p">.</span><span class="nx">orient</span><span class="o">===</span><span class="s2">&quot;block-axis&quot;</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">IE</span><span class="o">===</span><span class="mi">6</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline&quot;</span><span class="p">}}</span><span class="k">switch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">orient</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;vertical&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;block-axis&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="o">=</span><span class="nx">b</span><span class="p">}},</span><span class="nx">boxOrdinalGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">keys</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">k</span><span class="o">===</span><span class="nx">r</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-ordinal-group&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">r</span><span class="p">)}}};</span><span class="nx">e</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">)}},</span><span class="nx">boxFlex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC25'><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">groups</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">keys</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">][</span><span class="nx">l</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">;</span><span class="nx">y</span><span class="o">++</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">y</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">Wa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">property</span><span class="p">))</span><span class="nx">n</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">value</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">out</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">)</span><span class="nx">M</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">x</span><span class="p">)}}};</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">i</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="nx">i</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">i</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span></div><div class='line' id='LC26'><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">i</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">opp</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">out</span><span class="p">]</span><span class="o">-</span><span class="nx">i</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">i</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="k">return</span><span class="p">{</span><span class="nx">whitespace</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">ration</span><span class="o">:</span><span class="nx">i</span><span class="o">/</span><span class="nx">k</span><span class="p">.</span><span class="nx">total</span><span class="p">}};</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">groups</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">ration</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">y</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">w</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">v</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="nx">s</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-flex&quot;</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-specificity&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">||</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">q</span><span class="p">.</span><span class="nx">flexSpecificity</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-flex&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-specificity&quot;</span><span class="p">,</span></div><div class='line' id='LC27'><span class="nx">q</span><span class="p">.</span><span class="nx">flexSpecificity</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">+</span><span class="nx">m</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">match</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}}}};</span><span class="nx">h</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">total</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasFlex</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">g</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}},</span><span class="nx">boxAlign</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Q</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">flex</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">orient</span><span class="o">===</span><span class="s2">&quot;vertical&quot;</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">orient</span><span class="o">===</span><span class="s2">&quot;block-axis&quot;</span><span class="p">)){</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">];</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">property</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}}}</span><span class="nx">b</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="o">||</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span></div><div class='line' id='LC28'><span class="nx">x</span><span class="p">)}</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">out</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">b</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="k">switch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">align</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;start&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;end&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">out</span><span class="p">];</span><span class="nx">e</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">opp</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">out</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span> <span class="s2">&quot;button&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;input&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;select&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span></div><div class='line' id='LC29'><span class="nx">k</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">e</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;100%&quot;</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">e</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">opp</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anti</span><span class="p">.</span><span class="nx">dim</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}}},</span><span class="nx">boxPack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">b</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">out</span><span class="p">];</span><span class="nx">b</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">+=</span><span class="nx">D</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">opp</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">out</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span></div><div class='line' id='LC30'><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pad</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">b</span><span class="o">-=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">pack</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;end&quot;</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;justify&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">f</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="p">;){</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">f</span><span class="o">++</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">}</span><span class="nx">f</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="nx">M</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">h</span><span class="o">--</span><span class="p">}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}},</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">c</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="p">.</span><span class="nx">partialSupport</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">Ba</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">boxOrient</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC31'><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">total</span><span class="o">||!</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nested</span><span class="p">).</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">align</span><span class="o">===</span><span class="s2">&quot;stretch&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">Q</span><span class="p">.</span><span class="nx">boxAlignStretch</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">nested</span><span class="o">||!</span><span class="nx">e</span><span class="p">.</span><span class="nx">flex</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">boxAlign</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">pack</span><span class="o">===</span><span class="s2">&quot;justify&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">Q</span><span class="p">.</span><span class="nx">boxPackJustify</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">total</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">boxPack</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Q</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">properties</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">),</span><span class="nx">c</span><span class="p">)}},</span><span class="nx">trackDOM</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ra</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">updateModel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodes</span><span class="p">;</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">flexMatrix</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">ordinalMatrix</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC32'><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">flexMatrix</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">flex</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flexMatrix</span><span class="p">[</span><span class="nx">b</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ordinalMatrix</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;ordinal-group&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ordinalMatrix</span><span class="p">[</span><span class="nx">b</span><span class="p">]}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">setup</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">bubbleUp</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">renderModel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">updateModel</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">trackDOM</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">bubbleUp</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">b</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">]){</span><span class="nx">Aa</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodes</span><span class="p">);</span></div><div class='line' id='LC33'><span class="k">this</span><span class="p">.</span><span class="nx">setup</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodes</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}}};</span><span class="nx">J</span><span class="p">.</span><span class="nx">updateInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">])</span><span class="nx">c</span><span class="p">.</span><span class="nx">_instance</span><span class="p">.</span><span class="nx">updateModel</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">new</span> <span class="nx">J</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">B</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_instance</span><span class="p">.</span><span class="nx">updateModel</span><span class="p">(</span><span class="nx">c</span><span class="p">)}};</span><span class="nx">J</span><span class="p">.</span><span class="nx">getInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">]};</span><span class="nx">J</span><span class="p">.</span><span class="nx">destroyInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">E</span><span class="p">}};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)(</span><span class="nx">a</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">FLX_DOM_ID</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">B</span><span class="p">)</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC34'><span class="nx">d</span><span class="p">(</span><span class="nx">B</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="nx">B</span><span class="o">=</span><span class="p">[]}};</span><span class="nx">J</span><span class="p">.</span><span class="nx">flexboxSupport</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;flxbox&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;100px&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s1">&#39;&lt;b style=&quot;margin: 0; padding: 0; display:block; width: 10px; height:50px&quot;&gt;&lt;/b&gt;&lt;b style=&quot;margin: 0; padding: 0; display:block; width: 10px; height:50px&quot;&gt;&lt;/b&gt;&lt;b style=&quot;margin: 0; padding: 0; display:block; width: 10px; height:50px&quot;&gt;&lt;/b&gt;&#39;</span><span class="p">;</span><span class="nx">fa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;box&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">fa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;box-align&quot;</span><span class="p">,</span><span class="s2">&quot;stretch&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">fa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;box-pack&quot;</span><span class="p">,</span><span class="s2">&quot;justify&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">R</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">;</span></div><div class='line' id='LC35'><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">boxAlignStretch</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="mi">100</span><span class="p">},</span><span class="nx">boxPackJustify</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="o">===</span><span class="mi">135</span><span class="p">}};</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">partialSupport</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="nx">R</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span><span class="o">~</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;box&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">U</span><span class="p">};</span><span class="nx">J</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">J</span><span class="p">.</span><span class="nx">flexboxSupported</span><span class="o">=</span><span class="nx">Q</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">flexboxSupport</span><span class="p">();</span><span class="k">if</span><span class="p">((</span><span class="o">!</span><span class="nx">Q</span><span class="o">||</span><span class="nx">Q</span><span class="p">.</span><span class="nx">partialSupport</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">)</span><span class="nx">Ea</span><span class="p">()};</span><span class="nx">J</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;1.0.3&quot;</span><span class="p">;(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Ca</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">V</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC36'><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">))){</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="nx">T</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">V</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">m</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="o">?</span><span class="nb">eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="nx">H</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">p</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">break</span><span class="p">}}}</span><span class="nx">e</span><span class="o">||</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)})(</span><span class="nx">J</span><span class="p">.</span><span class="nx">init</span><span class="p">);</span><span class="k">return</span> <span class="nx">J</span><span class="p">}(</span><span class="k">this</span><span class="p">,</span><span class="nb">document</span><span class="p">);</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.17087s from github-fe117-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/doctyper/flexie/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

